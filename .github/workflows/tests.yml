# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    container: python:3.12

    services:
      # Label used to access the service container
      database:
        # Docker Hub image
        image: "postgres:16"
        # Configure the postgres container
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: default
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Lint with isort and black
      run: |
        isort --check ./app ./tests
        black --check ./app ./tests
      continue-on-error: true

    - name: Test with pytest
      run: |
        pytest -vvv ./tests
      env:
        TEST_DATABASE_ADMIN_URL: postgresql+asyncpg://postgres:postgres@database:5432/default
        TEST_DATABASE_URL: postgresql+asyncpg://postgres:postgres@database:5432/testing
