version: '3.4'
services:

  api:
    image: myapp:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        PYTHON_VERSION: "3.12"
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      PYTHONPATH: /app/src/
      SECRET_KEY:
      DATABASE_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@database:5432/default
      TEST_DATABASE_ADMIN_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@database:5432/default
      TEST_DATABASE_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@database:5432/testing
      REDIS_URL: redis://redis:6379
      FRONTEND_URL: "${FRONTEND_URL:-http://localhost:3000}"
    volumes:
      # Mount the current working copy over the soure copied in the
      # containerized image.
      # This ensures we're always running the latest code without
      # having to requild the container for each change to apply.
      # It also allows to use autoreloading to apply code changes.
      - .:/app/src/
    command: python -m app.webapi.server

  database:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD:
      POSTGRES_DB: 'default'
    volumes:
      - db-pgdata:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    image: redis:7
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:${REDIS_PORT:-6379}:6379"

volumes:
  db-pgdata:
  redis-data:
